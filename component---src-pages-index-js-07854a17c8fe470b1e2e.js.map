{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/articles.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"names":["posts","className","map","post","title","frontmatter","fields","slug","Link","to","key","itemProp","itemScope","itemType","fluid","thumbnailImage","childImageSharp","author","date","dangerouslySetInnerHTML","__html","description","excerpt","data","location","siteTitle","site","siteMetadata","allMarkdownRemark","nodes","length"],"mappings":"iKAoDA,IAhDiB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAElB,OACE,sBAAIC,UAAU,gBACXD,EAAME,KAAI,SAAAC,GACT,IAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACE,gBAAC,EAAAC,KAAD,CACEC,GAAIN,EAAKG,OAAOC,KAChBG,IAAKP,EAAKG,OAAOC,KACjBI,SAAS,MACTV,UAAU,eAEV,sBAAIS,IAAKP,EAAKG,OAAOC,KAAMN,UAAU,YACnC,2BACEA,UAAU,iBACVW,WAAS,EACTC,SAAS,6BAET,gBAAC,IAAD,CAAKZ,UAAU,eACba,MAAOX,EAAKE,YAAYU,eAAeC,gBAAgBF,QAEzD,0BAAQb,UAAU,iBAChB,sBAAIA,UAAU,aACZ,wBAAMU,SAAS,YAAYP,IAE7B,yBAAOH,UAAU,eAAeE,EAAKE,YAAYY,QAAe,2BAChE,yBAAOhB,UAAU,eAAeE,EAAKE,YAAYa,OAGnD,2BAASjB,UAAU,eACjB,qBACEkB,wBAAyB,CACvBC,OAAQjB,EAAKE,YAAYgB,aAAelB,EAAKmB,SAE/CX,SAAS,0B,qFCJ7B,UA5BkB,SAAC,GAAwB,IAAD,EAArBY,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBvB,QAAxB,QACZJ,EAAQuB,EAAKK,kBAAkBC,MAGrC,OAAqB,IAAjB7B,EAAM8B,OAEN,gBAAC,IAAD,CAAQN,SAAUA,EAAUpB,MAAOqB,GACjC,gBAAC,IAAD,CAAKrB,MAAM,cAEX,uLAUJ,gBAAC,IAAD,CAAQoB,SAAUA,EAAUpB,MAAOqB,GACjC,gBAAC,IAAD,CAAKrB,MAAM,cAEX,gBAAC,IAAD,CAAUJ,MAAOA","file":"component---src-pages-index-js-07854a17c8fe470b1e2e.js","sourcesContent":["import * as React from \"react\"\r\nimport Img from \"gatsby-image\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Articles = ({ posts }) => {\r\n\r\n  return (\r\n    <ol className=\"articlesList\">\r\n      {posts.map(post => {\r\n        const title = post.frontmatter.title || post.fields.slug\r\n\r\n        return (\r\n          <Link\r\n            to={post.fields.slug}\r\n            key={post.fields.slug}\r\n            itemProp=\"url\"\r\n            className=\"articleLink\"\r\n          >\r\n            <li key={post.fields.slug} className=\"articles\">\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <Img className=\"articleImage\"\r\n                  fluid={post.frontmatter.thumbnailImage.childImageSharp.fluid}\r\n                />\r\n                <header className=\"articleHeader\">\r\n                  <h2 className=\"articleH2\">\r\n                    <span itemProp=\"headline\">{title}</span>\r\n                  </h2>\r\n                  <small className=\"articleDate\">{post.frontmatter.author}</small><br />\r\n                  <small className=\"articleDate\">{post.frontmatter.date}</small>\r\n                </header>\r\n\r\n                <section className=\"articleText\">\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          </Link>\r\n        )\r\n      })}\r\n    </ol>\r\n  )\r\n}\r\n\r\nexport default Articles\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Articles from \"../components/articles\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <SEO title=\"All posts\" />\r\n\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle} >\r\n      <SEO title=\"All posts\" />\r\n\r\n      <Articles posts={posts} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: {frontmatter: {tag: {in: \"nature\"}}}\r\n      sort: {fields: frontmatter___date, order: DESC}\r\n    ) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          author\r\n          tag\r\n          thumbnailImage {\r\n            childImageSharp {\r\n              fluid(maxWidth: 700) {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}